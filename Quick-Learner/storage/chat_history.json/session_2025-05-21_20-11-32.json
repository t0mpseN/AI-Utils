[
  {
    "type": "human",
    "data": {
      "content": "olá, tudo bem?",
      "additional_kwargs": {},
      "response_metadata": {},
      "type": "human",
      "name": null,
      "id": null,
      "example": false
    }
  },
  {
    "type": "system",
    "data": {
      "content": "Olá! Tudo bem por aqui, obrigado por perguntar. E com você? Como posso ajudar hoje?",
      "additional_kwargs": {},
      "response_metadata": {},
      "type": "system",
      "name": null,
      "id": null
    }
  },
  {
    "type": "human",
    "data": {
      "content": "me escreva um código em python, de pelo menos 30 linhas",
      "additional_kwargs": {},
      "response_metadata": {},
      "type": "human",
      "name": null,
      "id": null,
      "example": false
    }
  },
  {
    "type": "system",
    "data": {
      "content": "```python\n# Este programa simula um sistema de gerenciamento de tarefas simples.\n# Ele permite adicionar tarefas, listar tarefas, marcar tarefas como concluídas\n# e remover tarefas.\n\ndef adicionar_tarefa(tarefas):\n    \"\"\"Adiciona uma nova tarefa à lista de tarefas.\"\"\"\n    tarefa = input(\"Digite a descrição da nova tarefa: \")\n    tarefas[tarefa] = False  # Inicialmente, a tarefa está como pendente\n    print(f\"Tarefa '{tarefa}' adicionada.\")\n\n\ndef listar_tarefas(tarefas):\n    \"\"\"Lista todas as tarefas pendentes.\"\"\"\n    if not tarefas:\n        print(\"Nenhuma tarefa pendente.\")\n        return\n\n    print(\"\\nTarefas Pendentes:\")\n    for numero, (tarefa, concluida) in enumerate(tarefas.items()):\n        status = \"[Concluída]\" if concluida else \"[Pendente]\"\n        print(f\"{numero + 1}. {tarefa} {status}\")\n\n\ndef marcar_como_concluida(tarefas):\n    \"\"\"Marca uma tarefa como concluída.\"\"\"\n    listar_tarefas(tarefas)\n    try:\n        numero_tarefa = int(input(\"Digite o número da tarefa para marcar como concluída: \")) - 1\n        if 0 <= numero_tarefa < len(tarefas):\n            tarefa = list(tarefas.keys())[numero_tarefa]\n            tarefas[tarefa] = True\n            print(f\"Tarefa '{tarefa}' marcada como concluída.\")\n        else:\n            print(\"Número de tarefa inválido.\")\n    except ValueError:\n        print(\"Entrada inválida. Digite um número.\")\n\n\ndef remover_tarefa(tarefas):\n    \"\"\"Remove uma tarefa da lista de tarefas.\"\"\"\n    listar_tarefas(tarefas)\n    try:\n        numero_tarefa = int(input(\"Digite o número da tarefa para remover: \")) - 1\n        if 0 <= numero_tarefa < len(tarefas):\n            tarefa = list(tarefas.keys())[numero_tarefa]\n            del tarefas[tarefa]\n            print(f\"Tarefa '{tarefa}' removida.\")\n        else:\n            print(\"Número de tarefa inválido.\")\n    except ValueError:\n        print(\"Entrada inválida. Digite um número.\")\n\n\ndef main():\n    \"\"\"Função principal para controlar o programa.\"\"\"\n    tarefas = {}  # Dicionário para armazenar tarefas (chave: descrição, valor: status)\n\n    while True:\n        print(\"\\nOpções:\")\n        print(\"1. Adicionar tarefa\")\n        print(\"2. Listar tarefas\")\n        print(\"3. Marcar tarefa como concluída\")\n        print(\"4. Remover tarefa\")\n        print(\"5. Sair\")\n\n        opcao = input(\"Escolha uma opção: \")\n\n        if opcao == \"1\":\n            adicionar_tarefa(tarefas)\n        elif opcao == \"2\":\n            listar_tarefas(tarefas)\n        elif opcao == \"3\":\n            marcar_como_concluida(tarefas)\n        elif opcao == \"4\":\n            remover_tarefa(tarefas)\n        elif opcao == \"5\":\n            print(\"Saindo...\")\n            break\n        else:\n            print(\"Opção inválida. Tente novamente.\")\n\n\nif __name__ == \"__main__\":\n    main()\n```\n",
      "additional_kwargs": {},
      "response_metadata": {},
      "type": "system",
      "name": null,
      "id": null
    }
  }
]